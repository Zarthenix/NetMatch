@using NetMatch_PT.Models.Enums
@using NetMatch_PT.ViewModels
@model SearchResultVm

@{
    ViewData["Title"] = "Result";
}
<style>
    .grid-container {
        display: grid;
        grid-template-columns: auto auto auto;
        background-color: #ffffff;
    }

    .grid-item {
        background-color: #ffffff;
        border: 1px solid rgba(0, 0, 0, 0.8);
        padding: 20px;
        font-size: 24px;
        text-align: center;
        max-width: 500px;
        box-sizing: border-box;
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
        margin: 20px;
    }
</style>
@if (TempData["failed"] != null)
{
    <h1 style="position: absolute; left: 25%; top: 18%;">@TempData["failed"]</h1>
}
<h2 style="text-align:center">@ViewData["result"]</h2>
<div class="container">
    <div class="col-md-12 quickSearch" style="margin-top: 2%;">
        <form class="form-inline" method="get" asp-action="QuickSearch" asp-controller="Search">
            <div class="form-row">
                <div class="col">
                    <select asp-for="@Model.SearchVm.TravelType" class="form-control">
                        <option value="null" selected disabled>Reistype</option>
                        @foreach (int x in Enum.GetValues(typeof(TravelTypes)))
                        {
                            <option value="@x">@Enum.GetName(typeof(TravelTypes), x)</option>
                        }
                    </select>
                </div>
                <div class="col">
                    <select asp-for="@Model.SearchVm.Country" class="form-control">
                        <option value="null" selected disabled>Land</option>
                        @foreach (int x in Enum.GetValues(typeof(Countries)))
                        {
                            <option value="@x">@Enum.GetName(typeof(Countries), x)</option>
                        }
                    </select>
                </div>
                <div class="col">
                    <select asp-for="@Model.SearchVm.Month" class="form-control">
                        <option value="null" selected disabled>Maand</option>
                        @foreach (int x in Enum.GetValues(typeof(Months)))
                        {
                            <option value="@x">@Enum.GetName(typeof(Months), x)</option>
                        }
                    </select>
                </div>
                <input class="btn btn-info" type="submit" value="Zoeken" />
            </div>
        </form>
    </div>
    <div class="grid-container">
        @foreach (AccommodationDetailVm item in Model.results)
        {
            <div class="grid-item">
                <div class="card mb-3" style="background-color: rgba(77, 138, 235, 0.3); height:750px">
                    <a href='@Url.Action("Detail", "Accommodation", new {id = item.Id})' style="text-decoration: none;">
                        <img class="card-img-top" src="data:image/png;base64,@item.Image" alt=@item.Title foto style="max-height:225px;"/>
                        <div class="card-body" style="height:100%">
                            <h5 class="card-title">@item.Title</h5>
                            <p class="card-text"><small class="text-muted">@item.Country.ToString()</small></p>
                            @if (@item.Description.Length > 40)
                            {
                                string display = item.Description.Substring(0, 38) + "..";
                                <p class="card-text">@display</p>
                            }
                            else
                            {
                                <p class="card-text">@item.Description</p>
                            }
                            <p class="card-text">
                                <ul class="list-group">
                                    @if (item.DatePrices.Count >= 3)
                                    {

                                        foreach (var dp in item.DatePrices.OrderBy(x => x.Date).ToList())
                                        {
                                            if (item.DatePrices.IndexOf(dp) == 3)
                                            {
                                                break;
                                            }
                                            <li class="list-group-item"><b>@dp.Date.ToShortDateString()</b><br /> Vanaf: €@dp.Price</li>
                                        }
                                    }
                                    else
                                    {
                                        var sortedList = item.DatePrices.OrderBy(y => y.Date).ToList();
                                        for (int x = 0; x < 3; x++)
                                        {
                                            if (x > item.DatePrices.Count - 1)
                                            {
                                                <li class="list-group-item">Geen data gevonden.</li>
                                            }
                                            else
                                            {
                                                <li class="list-group-item"><b>@sortedList[x].Date.ToShortDateString()</b> <br /> Vanaf €@item.DatePrices[x].Price</li>
                                            }
                                        }
                                    }
                                </ul>
                            </p>
                        </div>
                    </a>
                </div>
            </div>
        }
    </div>
</div>
